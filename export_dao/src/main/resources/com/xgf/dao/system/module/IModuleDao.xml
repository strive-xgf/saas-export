<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xgf.dao.system.module.IModuleDao">

    <!-- 创建实体类与表字段的映射关系 -->
    <resultMap id="moduleMap" type="module">
        <id column="module_id"         property="moduleId"    />
        <result column="parent_id"     property="parentId"    />
        <result column="parent_name"   property="parentName"  />
        <result column="name"          property="name"        />
        <result column="layer_num"     property="layerNum"    />
        <result column="is_leaf"       property="isLeaf"      />
        <result column="ico"           property="ico"         />
        <result column="cpermission"   property="cpermission" />
        <result column="curl"          property="curl"        />
        <result column="ctype"         property="ctype"       />
        <result column="state"         property="state"       />
        <result column="belong"        property="belong"      />
        <result column="cwhich"        property="cwhich"      />
        <result column="quote_num"     property="quoteNum"    />
        <result column="remark"        property="remark"      />
        <result column="order_no"      property="orderNo"     />
    </resultMap>

    <!-- 查找所有的功能模块 -->
    <select id="findAll" resultMap="moduleMap">
        select * from ss_module order by order_no asc
    </select>

    <!-- 新增一个功能模块
         需要判断是否有上级模块，如果没有上级模块，赋值为NULL，否则赋值上级模块id
    -->
    <insert id="save" parameterType="module">

        insert into ss_module
            (
                module_id   ,
                parent_id   ,
                parent_name ,
                name        ,
                layer_num   ,
                is_leaf     ,
                ico         ,
                cpermission ,
                curl        ,
                ctype       ,
                state       ,
                belong      ,
                cwhich      ,
                quote_num   ,
                remark      ,
                order_no
            )
            value
            (
                #{moduleId},
                <if test="parentId == null or parentId=='' ">
                    NULL,
                </if>
                <if test="parentId != null and parentId!='' ">
                    #{parentId  },
                </if>

                #{parentName},
                #{name      },
                #{layerNum  },
                #{isLeaf    },
                #{ico       },
                #{cpermission},
                #{curl      },
                #{ctype     },
                #{state     },
                #{belong    },
                #{cwhich    },
                #{quoteNum  },
                #{remark    },
                #{orderNo   }
            )
    </insert>

    <!-- 通过id查找模块 -->
    <select id="findById" parameterType="string" resultMap="moduleMap" >
        select * from ss_module where module_id=#{moduleId}
    </select>

    <!-- 更新模块信息 -->
    <update id="update" parameterType="module">

        update ss_module set
            parent_id   = #{parentId    },
            parent_name = #{parentName  },
            name        = #{name        },
            layer_num   = #{layerNum    },
            is_leaf     = #{isLeaf      },
            ico         = #{ico         },
            cpermission = #{cpermission },
            curl        = #{curl        },
            ctype       = #{ctype       },
            state       = #{state       },
            belong      = #{belong      },
            cwhich      = #{cwhich      },
            quote_num   = #{quoteNum    },
            remark      = #{remark      },
            order_no    = #{orderNo     }
        where module_id   =  #{moduleId}
    </update>

    <!-- 通过id删除模块 -->
    <delete id="deleteById" parameterType="string">
        delete from ss_module where module_id=#{moduleId}
    </delete>

    <!-- 查找以当前模块为父模块的模块数量 -->
    <select id="findParentIdCount" parameterType="string" resultType="int">
        select count(*) from ss_module where parent_id=#{moduleId}
    </select>


    <!-- 通过角色id查询角色的模块权限 -->
    <select id="findByRoleId" parameterType="string" resultMap="moduleMap" >
        select m.*
        from pe_role_module rm
        inner join ss_module m
        on rm.module_id = m.module_id
        where rm.role_id=#{roleId}
    </select>

    <!-- 删除指定角色的所有模块权限 -->
    <delete id="deleteRoleModule" parameterType="string">
        delete from pe_role_module where role_id=#{roleId}
    </delete>

    <!-- 给角色添加模块(权限)  void saveRoleModule(String roleId, String mid);-->
    <!-- 保存角色模块有两个参数，第一个参数是：角色id（roleId）第二个参数是：模块id（moduleId)
            可以通过arg0、arg1...来接收
            或者通过param1、param2...来接收
    -->
    <insert id="saveRoleModule">
            insert into pe_role_module values(#{arg0},#{arg1})
    </insert>
    <!--
     <insert id="saveRoleModule" >
             insert into pe_role_module values(#{param1},#{param2})
     </insert>
     -->

<!--    <select id="findByBelong" parameterType="string" resultMap="moduleMap">
        select * from ss_module where belong = #{belong};
    </select>

    <select id="findByUserId" parameterType="string" resultMap="moduleMap">
            select distinct  m.*
            from
            pe_role_user ru
            inner join pe_role_module rm on ru.role_id=rm.role_id
            inner join ss_module m       on m.module_id=rm.module_id
            where ru.user_id=#{userId}
            order by module_id asc;
    </select>-->


</mapper>