<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>


  <!--这些配置是有顺序的 context-param参数，后面是filter过滤器，然后是listener监听器，然后是servlet前端控制器 -->

  <!--1. spring监听器: 读取applicationContext.xml配置文件
      设置spring核心配置文件的路径 applicationContext-tx.xml和applicationContext-dao.xml-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:spring/applicationContext-*.xml</param-value>
  </context-param>

  <!--  2. 配置字符编码过滤器characterEncodingFilter  解决中文乱码（统一编码） -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <!-- spring自带编码过滤器 -->
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <!-- 读取键值对 key-取名 value-设置的编码 -->
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <!-- /*拦截所有请求，都要被过滤器过滤 -->
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--3. 配置Spring的监听器，默认只加载WEB-INF目录下的applicationContext.xml配置文件-->
  <listener>
    <!-- ContextLoaderListener监听器的作用就是启动Web容器时，自动装配applicationContext的配置信息 -->
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!--4. 配置前端控制器，进行接收请求转发至controller，解决Controller的问题（web层）-->
  <servlet>
    <!-- 前端控制器取名 可以更改，但是要和下面的一样 -->
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--加载springmvc.xml配置文件-->
    <init-param>
      <!-- 整合SpringMVC，需要加载springmvc核心配置文件 -->
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/springmvc.xml</param-value>
    </init-param>
    <!--数字越大优先级越低， 数字为1，启动服务器，立即创建该servlet -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <!-- 要和上面的前端控制器命名相同 -->
    <servlet-name>DispatcherServlet</servlet-name>
    <!-- *.do 表示所有后缀为do的请求 -->
    <!--<url-pattern>*.do</url-pattern>-->
    <!-- /表示拦截所有请求进行请求转发 -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!-- 设置打开主页为起始页 -->
  <welcome-file-list>
    <welcome-file>home/toMain</welcome-file>
  </welcome-file-list>

</web-app>

